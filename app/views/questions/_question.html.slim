- if question.persisted?
  div< id="question-#{question.id}"
    p= question.title
    p= question.body
    - if question.files.attached?
      - question.files.each do |file|
        p= link_to file.filename.to_s, url_for(file)
        - if can?(:manage, question)
          p= link_to 'Remove', file_question_destroy_path(file.id), remote: true, method: :delete
    = link_to 'Open answers', question_path(question)
    = render 'shared/votes', resource: question
    - if can?(:manage, question)
      = link_to 'Delete', question_path(question), remote: true, method: :delete
      = link_to 'Edit', '#', class: 'edit-question-link', data: { question_id: question.id }
      = form_with model: question, local: false, class: 'hidden', html: { id: "edit-question-#{question.id}" } do |f|
        = f.label :title
        = f.text_area :title
        = f.label :body
        = f.text_area :body
        = f.label :files
        = f.file_field :files, multiple: true
        p Links:
        p
          = f.fields_for :links do |link|
            = render('links/link_fields', f: link) unless link.object.persisted?
          .links
            = link_to_add_association 'add link', f, :links, { partial: 'links/link_fields' }
        = f.submit 'Save'
    .comments
      h5 Comments:
      = render question.comments
      .new-comment
        = form_with model: [question, question.comments.build], local: false, format: :js do |f|
          = f.label :body, 'Comment:'
          = f.text_area :body
          = f.submit 'Comment'